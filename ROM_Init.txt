00430820                 //r1 = r2 + r3 = 5;
00620822                 //r1 = r3 - r2 = 1;
00620824                 //r1 = r3 & r2 = 2;
00620825                 //r1 = r3 | r2 = 3;
00620826                 //r1 = r3 ^ r2 = 1;
00620827                 //r1 = r3 nor r2 = power(2,32)-4;
0062082a                 //r1 = r3 slt r2 = 0;
00620800                 //r1 = r3 << r2 = 12;
00222002                 //r4 = r1 >> r2 = 3;//旁路
20410001                 //r1 = r2 + 1 = 3;
2081ffff                 //r1 = r4 - 1 = 3;//旁路
30410001                 //r1 = r2 & 1 = 0;
34410001                 //r1 = r2 | 1 = 3;
38410002                 //r1 = r2 ^ 1 = 0;
8c410001                 //r1 = mem_ram[r2+1] = 3;
ac460001                 //mem_ram[r2+1] = r6 = 6;
8c410002                 //r1 = mem_ram[r2+2] = 4;//ALUOut = 4;
20220001                 //r2 = r1 + 1 = 5;//等待,r1需要先从主存里读取数据
1064002d                 //r1 = r4,PC = 72,PC = PC+4+45<<2 = 256;
20410001                 //r1 = r2 + 1 = 6;
00011820                 //r3 = r0 + r1 = 6;//旁路
1026002b                 //r1 = r6,PC = 84,PC = PC+4+43<<2 = 260//ForwardAD = 1;
00430820                 //r1 = r2 + r3 = 11;PC = 88
102b0029                 //r1 = r11,PC = 92,PC = PC+4+42<<2 = 264//等待，等待旁路后比较
00620822                 //r1 = r3 - r2 = 1;
8c410005                 //r1 = mem_ram[r2+5] = 10;
20040004                 //r4 = r0 + 4 = 4;PC = 96;
102a0027                 //r1 = r10,PC = 108,PC = 268;//等待r1从存储器读出数据后比较
00620822                 //r1 = r3 - r2 = 1;PC = 112
00430820                 //r1 = r2 + r3 = 11;
@40
08000013                 //PC = 256,PC = 76;
08000016                 //PC = 260,PC = 88;
08000018                 //PC = 264,PC = 96
0800001c                 //PC = 268,PC = 112;



